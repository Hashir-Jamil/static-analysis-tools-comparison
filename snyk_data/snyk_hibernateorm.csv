File Path,Line Number,Type,Severity,Description
hibernate-orm/hibernate-core/src/main/java/org/hibernate/jpa/boot/internal/PersistenceXmlParser.java,474,XML External Entity (XXE) Injection,Medium,"Unsanitized input from a database flows into executeQuery, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/main/java/org/hibernate/jpa/boot/internal/PersistenceXmlParser.java,74,SQL Injection,Medium,"Unsanitized input from data from a remote resource flows into parse, which allows expansion of external entity references. This may result in a XXE attack leading to the disclosure of confidential data or denial of service."
Breadcrumbshibernate-orm/hibernate-community-dialects/src/test/java/org/hibernate/community/dialect/functional/cache/SQLFunctionsInterSystemsTest.java,251,SQL Injection,Low,"Unsanitized input from a database flows into update, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
Breadcrumbshibernate-orm/hibernate-community-dialects/src/test/java/org/hibernate/community/dialect/functional/cache/SQLFunctionsInterSystemsTest.java,303,SQL Injection,Low,"Unsanitized input from a database flows into update, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/hql/ASTParserLoadingTest.java,2171,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/hql/ASTParserLoadingTest.java,2348,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-community-dialects/src/test/java/org/hibernate/community/dialect/functional/cache/SQLFunctionsInterSystemsTest.java,252,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-community-dialects/src/test/java/org/hibernate/community/dialect/functional/cache/SQLFunctionsInterSystemsTest.java,304,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/annotations/cid/CompositeIdTest.java,151,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/annotations/cid/CompositeIdTest.java,152,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/annotations/cid/CompositeIdTest.java,234,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/annotations/cid/CompositeIdTest.java,235,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/id/array/PrimitiveCharacterArrayIdTest.java,76,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/id/array/PrimitiveCharacterArrayIdTest.java,77,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/id/array/CharacterArrayIdTest.java,78,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/id/array/CharacterArrayIdTest.java,79,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/id/array/PrimitiveByteArrayIdTest.java,81,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/id/array/PrimitiveByteArrayIdTest.java,82,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/id/array/ByteArrayIdTest.java,83,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/id/array/ByteArrayIdTest.java,84,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-testing/src/main/java/org/hibernate/testing/cleaner/SQLServerDatabaseCleaner.java,86,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-testing/src/main/java/org/hibernate/testing/cleaner/SQLServerDatabaseCleaner.java,150,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-testing/src/main/java/org/hibernate/testing/cleaner/SQLServerDatabaseCleaner.java,222,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability"
hibernate-orm/hibernate-testing/src/main/java/org/hibernate/testing/cleaner/SQLServerDatabaseCleaner.java,229,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-testing/src/main/java/org/hibernate/testing/cleaner/SQLServerDatabaseCleaner.java,236,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/SQLServerDialectTempTableCollationTest.java,72,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/SQLServerDialectTempTableCollationTest.java,74,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/SQLServerDialectTempTableCollationTest.java,75,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/SQLServerDialectTempTableCollationTest.java,144,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/SQLServerDialectTempTableCollationTest.java,146,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/SQLServerDialectTempTableCollationTest.java,147,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-testing/src/main/java/org/hibernate/testing/cleaner/DB2DatabaseCleaner.java,134,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-testing/src/main/java/org/hibernate/testing/cleaner/DB2DatabaseCleaner.java,246,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-testing/src/main/java/org/hibernate/testing/cleaner/DB2DatabaseCleaner.java,396,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-testing/src/main/java/org/hibernate/testing/cleaner/PostgreSQLDatabaseCleaner.java,114,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-testing/src/main/java/org/hibernate/testing/cleaner/PostgreSQLDatabaseCleaner.java,196,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-testing/src/main/java/org/hibernate/testing/cleaner/OracleDatabaseCleaner.java,134,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-testing/src/main/java/org/hibernate/testing/cleaner/OracleDatabaseCleaner.java,238,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-testing/src/main/java/org/hibernate/testing/cleaner/OracleDatabaseCleaner.java,245,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-testing/src/main/java/org/hibernate/testing/cleaner/OracleDatabaseCleaner.java,252,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-testing/src/main/java/org/hibernate/testing/cleaner/AbstractMySQLDatabaseCleaner.java,86,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-orm/hibernate-testing/src/main/java/org/hibernate/testing/cleaner/AbstractMySQLDatabaseCleaner.java,167,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
Breadcrumbshibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/SQLServerDialectTempTableCollationTest.java,73,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
Breadcrumbshibernate-orm/hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/SQLServerDialectTempTableCollationTest.java,145,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-testing/src/main/java/org/hibernate/testing/jdbc/SQLServerSnapshotIsolationConnectionProvider.java,42,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-testing/src/main/java/org/hibernate/testing/jdbc/SQLServerSnapshotIsolationConnectionProvider.java,43,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-testing/src/main/java/org/hibernate/testing/cleaner/DB2DatabaseCleaner.java,375,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-testing/src/main/java/org/hibernate/testing/cleaner/DB2DatabaseCleaner.java,385,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-core/src/test/java/org/hibernate/orm/test/collection/map/PersistentMapTest.java,190,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-core/src/test/java/org/hibernate/orm/test/annotations/join/JoinTest.java,109,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-testing/src/main/java/org/hibernate/testing/cleaner/H2DatabaseCleaner.java,133,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/MariaDBExtractSequenceMetadataTest.java,44,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate-core/src/test/java/org/hibernate/orm/test/fetching/ProfileFetchingTest.java,75,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/fetching/ProfileFetchingTest.java,76,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/fetching/FetchingTest.java,94,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/fetching/FetchingTest.java,112,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/fetching/FetchingTest.java,131,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/jpa/naturalid/ImmutableNaturalIdTest.java,51,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/jpa/naturalid/ImmutableNaturalIdTest.java,57,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/interceptor/InterceptorTest.java,132,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/component/basic/ComponentTest.java,116,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/timestamp/TimestampTest.java,78,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/jpa/ejb3configuration/ConfigurationObjectSettingTest.java,227,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/fetching/ProfileFetchingTest.java,74,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/fetching/FetchingTest.java,75,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/fetching/FetchingTest.java,93,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/fetching/FetchingTest.java,111,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/fetching/FetchingTest.java,130,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/version/sybase/SybaseTimestampVersioningTest.java,74,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/exception/SQLExceptionConversionTest.java,118,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/batch/BatchAndResultStreamTest.java,42,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/idclass/IdClassQueryTest.java,40,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/idclass/IdClassWithLazyManyToOneTest.java,149,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/idclass/IdClassWithEagerManyToOneTest.java,139,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/test/java/org/hibernate/orm/test/idclass/IdClassTest.java,110,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate-core/src/main/java/org/hibernate/mapping/Constraint.java,104,Use of Password Hash With Insufficient Computational Effort,Low,The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm
hibernate-core/src/main/java/org/hibernate/boot/model/naming/NamingHelper.java,150,Use of Password Hash With Insufficient Computational Effort,Low,The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm
