package,file_path,line_number,type,severity,description
ebean,ebean-redis/pom.xml,23,Allocation of Resources Without Limits or Throttling,High,Affected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling. An attacker can cause indefinite amounts of memory to be used by inputting a string of modest size. This can lead to a Denial of Service.
ebean,ebean-redis/pom.xml,23,Denial of Service (DoS),High,Affected versions of this package are vulnerable to Denial of Service (DoS) in the XML.toJSONObject component via crafted JSON or XML data.
ebean,ebean-redis/pom.xml,23,Remote Code Execution (RCE),High,"Affected versions of this package are vulnerable to Remote Code Execution (RCE). It provides a web console for managing the database, and by default it does not have a password set."
ebean,ebean-redis/pom.xml,23,"Dual License: EPL -1.0, MPL-2.0",Medium,io.ebean:ebean-redis@14.0.2 › io.ebean:ebean-core@14.0.2 › com.h2database:h2@2.2.220
ebean,ebean-postgis-types/pom.xml,6,Remote Code Execution (RCE),High,"Affected versions of this package are vulnerable to Remote Code Execution (RCE). It provides a web console for managing the database, and by default it does not have a password set."
ebean,ebean-postgis-types/pom.xml,6,"Dual License: EPL -1.0, MPL-2.0",Medium,io.ebean:ebean-redis@14.0.2 › io.ebean:ebean-core@14.0.2 › com.h2database:h2@2.2.220
ebean,ebean-postgis-types/pom.xml,56,LGPL-3.0 license,Medium,io.ebean:ebean-postgis-types@14.0.2 › org.geolatte:geolatte-geom@1.0.6 › com.vividsolutions:jts@1.13
ebean,ebean-postgis-types/pom.xml,41,LGPL-2.0 license,Medium,io.ebean:ebean-postgis-types@14.0.2 › net.postgis:postgis-jdbc@2.5.1 › net.postgis:postgis-geometry@2.5.1
ebean,ebean-postgis-types/pom.xml,41,LGPL-3.0 license,Medium,io.ebean:ebean-postgis-types@14.0.2 › org.geolatte:geolatte-geom@1.0.6 › com.vividsolutions:jts@1.13
ebean,ebean-postgis-types/pom.xml,56,LGPL-2.0 license,Medium,io.ebean:ebean-postgis-types@14.0.2 › net.postgis:postgis-jdbc@2.5.1 › net.postgis:postgis-geometry@2.5.1
ebean,ebean-test/pom.xml,120,Remote Code Execution (RCE),High,"Affected versions of this package are vulnerable to Remote Code Execution (RCE). It provides a web console for managing the database, and by default it does not have a password set."
ebean,ebean-test/pom.xml,120,"Dual License: EPL -1.0, MPL-2.0",Medium,io.ebean:ebean-test@14.0.2 › com.h2database:h2@2.2.220
ebean,ebean-spring-txn/pom.xml,6,Remote Code Execution (RCE),High,"Affected versions of this package are vulnerable to Remote Code Execution (RCE). It provides a web console for managing the database, and by default it does not have a password set."
ebean,ebean-spring-txn/pom.xml,6,"Dual License: EPL -1.0, MPL-2.0",Medium,io.ebean:ebean-spring-txn@14.0.2 › io.ebean:ebean-core@14.0.2 › com.h2database:h2@2.2.220
ebean,platforms/h2/pom.xml,24,Remote Code Execution (RCE),High,"Affected versions of this package are vulnerable to Remote Code Execution (RCE). It provides a web console for managing the database, and by default it does not have a password set."
ebean,platforms/h2/pom.xml,24,"Dual License: EPL -1.0, MPL-2.0",Medium,io.ebean:ebean-platform-h2@14.0.2 › com.h2database:h2@2.2.220
ebean,ebean-querybean/pom.xml,12,Remote Code Execution (RCE),High,"Affected versions of this package are vulnerable to Remote Code Execution (RCE). It provides a web console for managing the database, and by default it does not have a password set."
ebean,ebean-querybean/pom.xml,12,"Dual License: EPL -1.0, MPL-2.0",Medium,io.ebean:ebean-querybean@14.0.2 › io.ebean:ebean-core@14.0.2 › com.h2database:h2@2.2.220
ebean,ebean-core/pom.xml,78,Remote Code Execution (RCE),High,"Affected versions of this package are vulnerable to Remote Code Execution (RCE). It provides a web console for managing the database, and by default it does not have a password set."
ebean,ebean-core/pom.xml,78,"Dual License: EPL -1.0, MPL-2.0",Medium,io.ebean:ebean-core@14.0.2 › com.h2database:h2@2.2.220
ebean,ebean-ddl-generator/pom.xml,12,Remote Code Execution (RCE),High,"Affected versions of this package are vulnerable to Remote Code Execution (RCE). It provides a web console for managing the database, and by default it does not have a password set."
ebean,ebean-ddl-generator/pom.xml,12,"Dual License: EPL -1.0, MPL-2.0",Medium,io.ebean:ebean-ddl-generator@14.0.2 › io.ebean:ebean-core@14.0.2 › com.h2database:h2@2.2.220
ebean,ebean-core/src/main/java/io/ebeaninternal/server/type/SimpleAesEncryptor.java,48,Inadequate Padding for AES Encryption,Medium,AES with CBC mode and PKCS5Padding (AES/CBC/PKCS5Padding) used in javax.crypto.Cipher.getInstance is vulnerable to padding oracle attacks. Consider using Galois/Counter Mode (algorithm AES/GCM/NoPadding)
ebean,ebean-core/src/main/java/io/ebeaninternal/server/type/SimpleAesEncryptor.java,67,Inadequate Padding for AES Encryption,Medium,AES with CBC mode and PKCS5Padding (AES/CBC/PKCS5Padding) used in javax.crypto.Cipher.getInstance is vulnerable to padding oracle attacks. Consider using Galois/Counter Mode (algorithm AES/GCM/NoPadding)
ebean,ebean-core/src/main/java/io/ebeaninternal/server/type/SimpleAesEncryptor.java,48,Use of a Broken or Risky Cryptographic Algorithm,Medium,The CBC mode used in javax.crypto.Cipher.getInstance does not provide integrity. Consided using Galois/Counter Mode.
ebean,ebean-core/src/main/java/io/ebeaninternal/server/type/SimpleAesEncryptor.java,67,Use of a Broken or Risky Cryptographic Algorithm,Medium,The CBC mode used in javax.crypto.Cipher.getInstance does not provide integrity. Consided using Galois/Counter Mode.
ebean,platforms/h2/src/main/java/io/ebean/platform/h2/H2HistoryTrigger.java,97,SQL Injection,Medium,"Unsanitized input from a database flows into prepareStatement, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
ebean,ebean-test/src/main/java/io/ebean/test/config/platform/HanaSetup.java,21,Use of Hardcoded Credentials,Low,Do not hardcode passwords in code. Found hardcoded password used in here.
ebean,ebean-test/src/main/java/io/ebean/test/config/platform/SqlServerSetup.java,15,Use of Hardcoded Credentials,Low,Do not hardcode passwords in code. Found hardcoded password used in here.
ebean,ebean-core/src/main/java/io/ebeaninternal/server/util/Md5.java,13,Use of Password Hash With Insufficient Computational Effort,Low,The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm
ebean,ebean-test/src/main/java/io/ebean/test/config/platform/HanaSetup.java,20,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
ebean,ebean-test/src/main/java/io/ebean/test/config/platform/ClickHouseSetup.java,12,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
ebean,ebean-test/src/main/java/io/ebean/test/config/platform/CockroachSetup.java,12,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
ebean,ebean-test/src/test/java/org/tests/unitinternal/HelloMain.java,26,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
ebean,composites/ebean-postgis/pom.xml,79,LGPL-2.0 license,Medium, io.ebean:ebean-postgis@14.0.2 › net.postgis:postgis-jdbc@2.5.1
ebean,composites/ebean-postgis/pom.xml,79,LGPL-2.0 license,Medium, io.ebean:ebean-postgis@14.0.2 › net.postgis:postgis-jdbc@2.5.1
ebean,kotlin-querybean-generator/pom.xml,44,Information Exposure,Low,Affected versions of this package are vulnerable to Information Exposure. A Kotlin application using createTempDir or createTempFile and placing sensitive information within either of these locations would be leaking this information in a read-only way to other users also on this system
hibernate,hibernate-core/src/main/java/org/hibernate/jpa/boot/internal/PersistenceXmlParser.java,474,XML External Entity (XXE) Injection,Medium,"Unsanitized input from a database flows into executeQuery, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/main/java/org/hibernate/jpa/boot/internal/PersistenceXmlParser.java,74,SQL Injection,Medium,"Unsanitized input from data from a remote resource flows into parse, which allows expansion of external entity references. This may result in a XXE attack leading to the disclosure of confidential data or denial of service."
hibernate,hibernate-community-dialects/src/test/java/org/hibernate/community/dialect/functional/cache/SQLFunctionsInterSystemsTest.java,251,SQL Injection,Low,"Unsanitized input from a database flows into update, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-community-dialects/src/test/java/org/hibernate/community/dialect/functional/cache/SQLFunctionsInterSystemsTest.java,303,SQL Injection,Low,"Unsanitized input from a database flows into update, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/hql/ASTParserLoadingTest.java,2171,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/hql/ASTParserLoadingTest.java,2348,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-community-dialects/src/test/java/org/hibernate/community/dialect/functional/cache/SQLFunctionsInterSystemsTest.java,252,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-community-dialects/src/test/java/org/hibernate/community/dialect/functional/cache/SQLFunctionsInterSystemsTest.java,304,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/annotations/cid/CompositeIdTest.java,151,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/annotations/cid/CompositeIdTest.java,152,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/annotations/cid/CompositeIdTest.java,234,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/annotations/cid/CompositeIdTest.java,235,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/id/array/PrimitiveCharacterArrayIdTest.java,76,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/id/array/PrimitiveCharacterArrayIdTest.java,77,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/id/array/CharacterArrayIdTest.java,78,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/id/array/CharacterArrayIdTest.java,79,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/id/array/PrimitiveByteArrayIdTest.java,81,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/id/array/PrimitiveByteArrayIdTest.java,82,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/id/array/ByteArrayIdTest.java,83,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/id/array/ByteArrayIdTest.java,84,SQL Injection,Low,"Unsanitized input from a database flows into delete, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/SQLServerDatabaseCleaner.java,86,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/SQLServerDatabaseCleaner.java,150,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/SQLServerDatabaseCleaner.java,222,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability"
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/SQLServerDatabaseCleaner.java,229,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/SQLServerDatabaseCleaner.java,236,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/SQLServerDialectTempTableCollationTest.java,72,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/SQLServerDialectTempTableCollationTest.java,74,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/SQLServerDialectTempTableCollationTest.java,75,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/SQLServerDialectTempTableCollationTest.java,144,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/SQLServerDialectTempTableCollationTest.java,146,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/SQLServerDialectTempTableCollationTest.java,147,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/DB2DatabaseCleaner.java,134,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/DB2DatabaseCleaner.java,246,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/DB2DatabaseCleaner.java,396,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/PostgreSQLDatabaseCleaner.java,114,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/PostgreSQLDatabaseCleaner.java,196,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/OracleDatabaseCleaner.java,134,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/OracleDatabaseCleaner.java,238,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/OracleDatabaseCleaner.java,245,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/OracleDatabaseCleaner.java,252,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/AbstractMySQLDatabaseCleaner.java,86,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/AbstractMySQLDatabaseCleaner.java,167,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/SQLServerDialectTempTableCollationTest.java,73,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/SQLServerDialectTempTableCollationTest.java,145,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/jdbc/SQLServerSnapshotIsolationConnectionProvider.java,42,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/jdbc/SQLServerSnapshotIsolationConnectionProvider.java,43,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/DB2DatabaseCleaner.java,375,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/DB2DatabaseCleaner.java,385,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/collection/map/PersistentMapTest.java,190,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/annotations/join/JoinTest.java,109,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-testing/src/main/java/org/hibernate/testing/cleaner/H2DatabaseCleaner.java,133,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/dialect/functional/MariaDBExtractSequenceMetadataTest.java,44,SQL Injection,Low,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/fetching/ProfileFetchingTest.java,75,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/fetching/ProfileFetchingTest.java,76,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/fetching/FetchingTest.java,94,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/fetching/FetchingTest.java,112,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/fetching/FetchingTest.java,131,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/jpa/naturalid/ImmutableNaturalIdTest.java,51,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/jpa/naturalid/ImmutableNaturalIdTest.java,57,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/interceptor/InterceptorTest.java,132,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/component/basic/ComponentTest.java,116,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/timestamp/TimestampTest.java,78,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/jpa/ejb3configuration/ConfigurationObjectSettingTest.java,227,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/fetching/ProfileFetchingTest.java,74,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/fetching/FetchingTest.java,75,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/fetching/FetchingTest.java,93,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/fetching/FetchingTest.java,111,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/fetching/FetchingTest.java,130,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/version/sybase/SybaseTimestampVersioningTest.java,74,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/exception/SQLExceptionConversionTest.java,118,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/batch/BatchAndResultStreamTest.java,42,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/idclass/IdClassQueryTest.java,40,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/idclass/IdClassWithLazyManyToOneTest.java,149,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/idclass/IdClassWithEagerManyToOneTest.java,139,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/test/java/org/hibernate/orm/test/idclass/IdClassTest.java,110,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
hibernate,hibernate-core/src/main/java/org/hibernate/mapping/Constraint.java,104,Use of Password Hash With Insufficient Computational Effort,Low,The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm
hibernate,hibernate-core/src/main/java/org/hibernate/boot/model/naming/NamingHelper.java,150,Use of Password Hash With Insufficient Computational Effort,Low,The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm
openjpa,openjpa-jdbc/pom.xml,62,SQL Injection,Critical,"Affected versions of this package are vulnerable to SQL Injection when using PreferQueryMode=SIMPLE, which is not the default setting"
openjpa,openjpa-jdbc/pom.xml,57,Remote Code Execution,High,ffected versions of this package are vulnerable to Remote Code Execution (RCE) when using java.sql.Statement or java.sql.PreparedStatement to process untrusted input.
openjpa,openjpa-jdbc/pom.xml,67,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-tools/openjpa-maven-plugin/pom.xml,81,Command Injection,Critical,"Affected versions of this package are vulnerable to Command Injection. The Commandline class can emit double-quoted strings without proper escaping, allowing shell injection attacks."
openjpa,openjpa-tools/openjpa-maven-plugin/pom.xml,81,Directory Traversal,Medium,"commons-io:commons-io is a The Apache Commons IO library contains utility classes, stream implementations, file filters, file comparators, endian transformation classes, and much more."
openjpa,openjpa-tools/openjpa-maven-plugin/pom.xml,81,EPL-1.0 License,Medium,org.apache.openjpa:openjpa-maven-plugin@4.0.1-SNAPSHOT › org.apache.maven:maven-compat@3.8.1 › org.apache.maven:maven-model-builder@3.8.1 › org.eclipse.sisu:org.eclipse.sisu.inject@0.3.4
openjpa,openjpa-tools/openjpa-maven-plugin/pom.xml,76,EPL-1.0 License,Medium,org.apache.openjpa:openjpa-maven-plugin@4.0.1-SNAPSHOT › org.apache.maven:maven-compat@3.8.1 › org.eclipse.sisu:org.eclipse.sisu.plexus@0.3.4
openjpa,openjpa-tools/openjpa-maven-plugin/pom.xml,81,Information Disclosure,Low,Affected versions of this package are vulnerable to Information Disclosure. The file permissions on the file created by com.google.common.io.Files.createTempDir allow an attacker running a malicious program co-resident on the same machine to steal secrets stored in this directory
openjpa,openjpa-tools/openjpa-maven-plugin/pom.xml,81,Creation of Temporary File in Directory with Insecure Permissions,Low,Affected versions of this package are vulnerable to Creation of Temporary File in Directory with Insecure Permissions due to the use of Java's default temporary directory for file creation in FileBackedOutputStream
openjpa,openjpa-examples/openbooks/web/query.jsp,91,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-examples/openbooks/web/query.jsp,123,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)."
openjpa,openjpa-examples/openbooks/web/query.jsp,124,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-examples/openbooks/web/query.jsp,126,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)."
openjpa,openjpa-examples/openbooks/web/query.jsp,126,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-examples/openbooks/web/query.jsp,127,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-examples/openbooks/web/search.jsp,86,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-examples/openbooks/web/search.jsp,88,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-examples/openbooks/web/search.jsp,90,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-examples/openbooks/web/search.jsp,92,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-jest/src/main/java/org/apache/openjpa/persistence/jest/AbstractCommand.java,334,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-jest/src/main/java/org/apache/openjpa/persistence/jest/AbstractCommand.java,335,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-jest/src/main/java/org/apache/openjpa/persistence/jest/AbstractCommand.java,339,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-jest/src/main/java/org/apache/openjpa/persistence/jest/AbstractCommand.java,344,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-jest/src/main/java/org/apache/openjpa/persistence/jest/AbstractCommand.java,352,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-examples/openbooks/web/orders.jsp,182,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/StoredProcedureQuery.java,173,SQL Injection,Medium,"Unsanitized input from a database flows into prepareCall, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
openjpa,openjpa-examples/openbooks/src/main/java/openbook/server/DataLoader.java,38,Path Traversal,Medium,"Unsanitized input from a command line argument flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files"
openjpa,openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/StoredProcedureQuery.java,189,Unsafe Reflection,Medium,"Unsanitized input from a database flows into java.lang.Class.forName, where it is used for Reflection. This may result in an Unsafe Reflection vulnerability."
openjpa,openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/StoredProcedureQuery.java,239,Unsafe Reflection,Medium,"Unsanitized input from a database flows into java.lang.Class.forName, where it is used for Reflection. This may result in an Unsafe Reflection vulnerability."
openjpa,openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/ClassNameDiscriminatorStrategy.java,108,Unsafe Reflection,Medium,"Unsanitized input from a database flows into java.lang.Class.forName, where it is used for Reflection. This may result in an Unsafe Reflection vulnerability."
openjpa,openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Services.java,219,Unsafe Reflection,Medium,"Unsanitized input from a database flows into java.lang.Class.forName, where it is used for Reflection. This may result in an Unsafe Reflection vulnerability."
openjpa,openjpa-lib/src/test/java/org/apache/openjpa/lib/conf/TestXMLCaseConversions.java,58,Path Traversal,Low,"Unsanitized input from a command line argument flows into java.io.FileReader, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files."
openjpa,openjpa-integration/daytrader/src/test/java/org/apache/openjpa/integration/daytrader/AccountDataBean.java,286,Unprotected Storage of Credentials,Low,"An attacker might be able to detect the value of the password due to the exposure of comparison timing. When the functions Arrays.equals() or String.equals() are called, they will exit earlier if fewer bytes are matched. Use password encoder such as BCrypt for comparing passwords."
openjpa,openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/sql/TestSnakeCaseDDL.java,135,SQL Injection,Low,"Unsanitized input from a database flows into executeQuery, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
openjpa,openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestByteArray.java,53,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
openjpa,openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/kernel/TestRawSQL.java,89,Unsafe Reflection,Low,"Unsanitized input from a database flows into java.lang.Class.forName, where it is used for Reflection. This may result in an Unsafe Reflection vulnerability."
openjpa,openjpa-examples/openbooks/pom.xml,74,Access Control Bypass,High,Affected versions of this package are vulnerable to Access Control Bypass. A vulnerability in the Connector/J component allows low privileged attackers with network access via multiple protocols to compromise MySQL Connectors
openjpa,openbooks/pom.xml,74,XML External Entity (XXE) Injection,Medium,"Affected versions of this package are vulnerable to XML External Entity (XXE) Injection via the getSource() method, due to a missing check for external entities."
openjpa,openbooks/pom.xml,74,Improper Authorization,Medium,Affected versions of this package are vulnerable to Improper Authorization via the MysqlSQLXML::getSource() function. A malicious actor with high privileges can access all of the MySQL connector's accessible data and crash the connectors.
openjpa,openbooks/pom.xml,74,Privilege Escalation,Medium,Affected versions of this package are vulnerable to Privilege Escalation. A user with high privileges who is logged onto the infrastructure where MySQL Connectors executes to compromise MySQL Connectors. Successful attacks require human interaction from a person other than the attacker.
openjpa,openbooks/pom.xml,52,LDAP Injection,High,Affected versions of this package are vulnerable to LDAP Injection due to improper LDAP authentication checks. An attacker can fill up the disk by creating junk databases and execute malware visible to and executable by the account which booted the server.
openjpa,openbooks/pom.xml,67,GPL-3.0 License,High,org.apache.openjpa.openjpa-examples:openbooks@4.0.1-SNAPSHOT › de.java2html:java2html@5.0
openjpa,openbooks/pom.xml,74,GPL-2.0 License,High,org.apache.openjpa.openjpa-examples:openbooks@4.0.1-SNAPSHOT › mysql:mysql-connector-java@5.1.49
openjpa,openbooks/pom.xml,30,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-kubernetes/pom.xml,46,Arbitrary Code Execution,Medium,"Affected versions of this package are vulnerable to Arbitrary Code Execution in the Constructor class, which does not restrict which types can be deserialized. This vulnerability is exploitable by an attacker who provides a malicious YAML file for deserialization, which circumvents the SafeConstructor class."
openjpa,openjpa-kubernetes/pom.xml,46,Denial of Service (DoS),Medium,"Affected versions of this package are vulnerable to Denial of Service (DoS) in the _deserializeWrappedValue() function in StdDeserializer.java, due to resource exhaustion when processing deeply nested arrays."
openjpa,openjpa-kubernetes/pom.xml,46,Denial of Service (DoS),Medium,Affected versions of this package are vulnerable to Denial of Service (DoS) due to improper exception handling by the GzipSource class when parsing a malformed gzip buffer.
openjpa,openjpa-kubernetes/pom.xml,46,Information Exposure,Medium,"Affected versions of this package are vulnerable to Information Exposure. When there's an illegal character in a header value, an IllegalArgumentException is thrown whose message includes the full header value."
openjpa,openjpa-project/pom.xml,393,LDAP Injection,Medium,Affected versions of this package are vulnerable to LDAP Injection due to improper LDAP authentication checks. An attacker can fill up the disk by creating junk databases and execute malware visible to and executable by the account which booted the server.
openjpa,openjpa-project/pom.xml,405,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-tools/openjpa-fetch-statistics/pom.xml,63,EPL-1.0 License,Medium,org.apache.openjpa:openjpa-fetch-statistics@4.0.1-SNAPSHOT › junit:junit@4.13.2
openjpa,openjpa-kernel/pom.xml,83,EPL-1.0 License,Medium,org.apache.openjpa:openjpa-fetch-statistics@4.0.1-SNAPSHOT › junit:junit@4.13.2
openjpa,openjpa-integration/tck/pom.xml,550,LDAP Injection,Medium,Affected versions of this package are vulnerable to LDAP Injection due to improper LDAP authentication checks. An attacker can fill up the disk by creating junk databases and execute malware visible to and executable by the account which booted the server.
openjpa,openjpa-tools/openjpa-fetch-statistics-was/pom.xml,23,EPL-1.0 License,Medium,org.apache.openjpa:openjpa-fetch-statistics@4.0.1-SNAPSHOT › junit:junit@4.13.2
openjpa,openjpa-integration/jmx/pom.xml,51,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-integration/validation/pom.xml,57,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-integration/examples/pom.xml,100,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-examples/image-gallerypom.xml,50,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-all/pom.xml,136,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-examples/simple/pom.xml,44,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-integration/slf4j/pom.xml,54,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-jdbc/pom.xml,62,SQL Injection,Critical,"Affected versions of this package are vulnerable to SQL Injection when using PreferQueryMode=SIMPLE, which is not the default setting"
openjpa,openjpa-jdbc/pom.xml,57,Remote Code Execution,High,ffected versions of this package are vulnerable to Remote Code Execution (RCE) when using java.sql.Statement or java.sql.PreparedStatement to process untrusted input.
openjpa,openjpa-jdbc/pom.xml,67,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-tools/openjpa-maven-plugin/pom.xml,81,Command Injection,Critical,"Affected versions of this package are vulnerable to Command Injection. The Commandline class can emit double-quoted strings without proper escaping, allowing shell injection attacks."
openjpa,openjpa-tools/openjpa-maven-plugin/pom.xml,81,Directory Traversal,Medium,"commons-io:commons-io is a The Apache Commons IO library contains utility classes, stream implementations, file filters, file comparators, endian transformation classes, and much more."
openjpa,openjpa-tools/openjpa-maven-plugin/pom.xml,81,EPL-1.0 License,Medium,org.apache.openjpa:openjpa-maven-plugin@4.0.1-SNAPSHOT › org.apache.maven:maven-compat@3.8.1 › org.apache.maven:maven-model-builder@3.8.1 › org.eclipse.sisu:org.eclipse.sisu.inject@0.3.4
openjpa,openjpa-tools/openjpa-maven-plugin/pom.xml,76,EPL-1.0 License,Medium,org.apache.openjpa:openjpa-maven-plugin@4.0.1-SNAPSHOT › org.apache.maven:maven-compat@3.8.1 › org.eclipse.sisu:org.eclipse.sisu.plexus@0.3.4
openjpa,openjpa-tools/openjpa-maven-plugin/pom.xml,81,Information Disclosure,Low,Affected versions of this package are vulnerable to Information Disclosure. The file permissions on the file created by com.google.common.io.Files.createTempDir allow an attacker running a malicious program co-resident on the same machine to steal secrets stored in this directory
openjpa,openjpa-tools/openjpa-maven-plugin/pom.xml,81,Creation of Temporary File in Directory with Insecure Permissions,Low,Affected versions of this package are vulnerable to Creation of Temporary File in Directory with Insecure Permissions due to the use of Java's default temporary directory for file creation in FileBackedOutputStream
openjpa,openjpa-examples/openbooks/web/query.jsp,91,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-examples/openbooks/web/query.jsp,123,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)."
openjpa,openjpa-examples/openbooks/web/query.jsp,124,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-examples/openbooks/web/query.jsp,126,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)."
openjpa,openjpa-examples/openbooks/web/query.jsp,126,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-examples/openbooks/web/query.jsp,127,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-examples/openbooks/web/search.jsp,86,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-examples/openbooks/web/search.jsp,88,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-examples/openbooks/web/search.jsp,90,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-examples/openbooks/web/search.jsp,92,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-jest/src/main/java/org/apache/openjpa/persistence/jest/AbstractCommand.java,334,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-jest/src/main/java/org/apache/openjpa/persistence/jest/AbstractCommand.java,335,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-jest/src/main/java/org/apache/openjpa/persistence/jest/AbstractCommand.java,339,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-jest/src/main/java/org/apache/openjpa/persistence/jest/AbstractCommand.java,344,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-jest/src/main/java/org/apache/openjpa/persistence/jest/AbstractCommand.java,352,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-examples/openbooks/web/orders.jsp,182,Cross-Site Scripting (XSS),High,"Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)"
openjpa,openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/StoredProcedureQuery.java,173,SQL Injection,Medium,"Unsanitized input from a database flows into prepareCall, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
openjpa,openjpa-examples/openbooks/src/main/java/openbook/server/DataLoader.java,38,Path Traversal,Medium,"Unsanitized input from a command line argument flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files"
openjpa,openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/StoredProcedureQuery.java,189,Unsafe Reflection,Medium,"Unsanitized input from a database flows into java.lang.Class.forName, where it is used for Reflection. This may result in an Unsafe Reflection vulnerability."
openjpa,openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/StoredProcedureQuery.java,239,Unsafe Reflection,Medium,"Unsanitized input from a database flows into java.lang.Class.forName, where it is used for Reflection. This may result in an Unsafe Reflection vulnerability."
openjpa,openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/ClassNameDiscriminatorStrategy.java,108,Unsafe Reflection,Medium,"Unsanitized input from a database flows into java.lang.Class.forName, where it is used for Reflection. This may result in an Unsafe Reflection vulnerability."
openjpa,openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Services.java,219,Unsafe Reflection,Medium,"Unsanitized input from a database flows into java.lang.Class.forName, where it is used for Reflection. This may result in an Unsafe Reflection vulnerability."
openjpa,openjpa-lib/src/test/java/org/apache/openjpa/lib/conf/TestXMLCaseConversions.java,58,Path Traversal,Low,"Unsanitized input from a command line argument flows into java.io.FileReader, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files."
openjpa,openjpa-integration/daytrader/src/test/java/org/apache/openjpa/integration/daytrader/AccountDataBean.java,286,Unprotected Storage of Credentials,Low,"An attacker might be able to detect the value of the password due to the exposure of comparison timing. When the functions Arrays.equals() or String.equals() are called, they will exit earlier if fewer bytes are matched. Use password encoder such as BCrypt for comparing passwords."
openjpa,openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/sql/TestSnakeCaseDDL.java,135,SQL Injection,Low,"Unsanitized input from a database flows into executeQuery, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
openjpa,openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestByteArray.java,53,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code.
openjpa,openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/kernel/TestRawSQL.java,89,Unsafe Reflection,Low,"Unsanitized input from a database flows into java.lang.Class.forName, where it is used for Reflection. This may result in an Unsafe Reflection vulnerability."
openjpa,openjpa-examples/openbooks/pom.xml,74,Access Control Bypass,High,Affected versions of this package are vulnerable to Access Control Bypass. A vulnerability in the Connector/J component allows low privileged attackers with network access via multiple protocols to compromise MySQL Connectors
openjpa,openbooks/pom.xml,74,XML External Entity (XXE) Injection,Medium,"Affected versions of this package are vulnerable to XML External Entity (XXE) Injection via the getSource() method, due to a missing check for external entities."
openjpa,openbooks/pom.xml,74,Improper Authorization,Medium,Affected versions of this package are vulnerable to Improper Authorization via the MysqlSQLXML::getSource() function. A malicious actor with high privileges can access all of the MySQL connector's accessible data and crash the connectors.
openjpa,openbooks/pom.xml,74,Privilege Escalation,Medium,Affected versions of this package are vulnerable to Privilege Escalation. A user with high privileges who is logged onto the infrastructure where MySQL Connectors executes to compromise MySQL Connectors. Successful attacks require human interaction from a person other than the attacker.
openjpa,openbooks/pom.xml,52,LDAP Injection,High,Affected versions of this package are vulnerable to LDAP Injection due to improper LDAP authentication checks. An attacker can fill up the disk by creating junk databases and execute malware visible to and executable by the account which booted the server.
openjpa,openbooks/pom.xml,67,GPL-3.0 License,High,org.apache.openjpa.openjpa-examples:openbooks@4.0.1-SNAPSHOT › de.java2html:java2html@5.0
openjpa,openbooks/pom.xml,74,GPL-2.0 License,High,org.apache.openjpa.openjpa-examples:openbooks@4.0.1-SNAPSHOT › mysql:mysql-connector-java@5.1.49
openjpa,openbooks/pom.xml,30,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-kubernetes/pom.xml,46,Arbitrary Code Execution,Medium,"Affected versions of this package are vulnerable to Arbitrary Code Execution in the Constructor class, which does not restrict which types can be deserialized. This vulnerability is exploitable by an attacker who provides a malicious YAML file for deserialization, which circumvents the SafeConstructor class."
openjpa,openjpa-kubernetes/pom.xml,46,Denial of Service (DoS),Medium,"Affected versions of this package are vulnerable to Denial of Service (DoS) in the _deserializeWrappedValue() function in StdDeserializer.java, due to resource exhaustion when processing deeply nested arrays."
openjpa,openjpa-kubernetes/pom.xml,46,Denial of Service (DoS),Medium,Affected versions of this package are vulnerable to Denial of Service (DoS) due to improper exception handling by the GzipSource class when parsing a malformed gzip buffer.
openjpa,openjpa-kubernetes/pom.xml,46,Information Exposure,Medium,"Affected versions of this package are vulnerable to Information Exposure. When there's an illegal character in a header value, an IllegalArgumentException is thrown whose message includes the full header value."
openjpa,openjpa-project/pom.xml,393,LDAP Injection,Medium,Affected versions of this package are vulnerable to LDAP Injection due to improper LDAP authentication checks. An attacker can fill up the disk by creating junk databases and execute malware visible to and executable by the account which booted the server.
openjpa,openjpa-project/pom.xml,405,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-tools/openjpa-fetch-statistics/pom.xml,63,EPL-1.0 License,Medium,org.apache.openjpa:openjpa-fetch-statistics@4.0.1-SNAPSHOT › junit:junit@4.13.2
openjpa,openjpa-kernel/pom.xml,83,EPL-1.0 License,Medium,org.apache.openjpa:openjpa-fetch-statistics@4.0.1-SNAPSHOT › junit:junit@4.13.2
openjpa,openjpa-integration/tck/pom.xml,550,LDAP Injection,Medium,Affected versions of this package are vulnerable to LDAP Injection due to improper LDAP authentication checks. An attacker can fill up the disk by creating junk databases and execute malware visible to and executable by the account which booted the server.
openjpa,openjpa-tools/openjpa-fetch-statistics-was/pom.xml,23,EPL-1.0 License,Medium,org.apache.openjpa:openjpa-fetch-statistics@4.0.1-SNAPSHOT › junit:junit@4.13.2
openjpa,openjpa-integration/jmx/pom.xml,51,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-integration/validation/pom.xml,57,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-integration/examples/pom.xml,100,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-examples/image-gallerypom.xml,50,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-all/pom.xml,136,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-examples/simple/pom.xml,44,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
openjpa,openjpa-integration/slf4j/pom.xml,54,Information Exposure,Low,"Affected versions of this package are vulnerable to Information Exposure. If a BasicDataSource is created with jmxName set, the password property is exposed via jmx and is visible to anyone who is connected to jmx port."
ponyorm,pony/flask/example/config.py,3,Hardcoded Secret,High,Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.
ponyorm,pony/orm/examples/bottle_example.py,91,Debug Mode Enabled,Medium,Running the application in debug mode (debug flag is set to True in bottle.run) is a security risk if the application is accessible by untrusted parties
ponyorm,pony/orm/tests/test_entity_init.py,20,Use of Password Hash With Insufficient Computational Effort,Low,hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.
ponyorm,pony/orm/tests/test_entity_init.py,41,Use of Password Hash With Insufficient Computational Effort,Low,hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.
ponyorm,pony/orm/tests/test_entity_init.py,44,Use of Password Hash With Insufficient Computational Effort,Low,hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.
ponyorm,pony/orm/tests/test_entity_init.py,52,Use of Password Hash With Insufficient Computational Effort,Low,hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.
ponyorm,pony/orm/tests/test_entity_init.py,55,Use of Password Hash With Insufficient Computational Effort,Low,hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.
ponyorm,pony/orm/tests/fixtures.py,123,Use of Hardcoded Credentials,Low,Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.
ponyorm,pony/orm/tests/fixtures.py,225,Use of Hardcoded Credentials,Low,Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.
ponyorm,pony/orm/tests/fixtures.py,308,Use of Hardcoded Credentials,Low,Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.
ponyorm,pony/orm/tests/__init__.py,19,Code Injection,Low,"Unsanitized input from an environment variable flows into exec, where it is executed as Python code. This may result in a Code Injection vulnerability."
ponyorm,pony/orm/tests/fixtures.py,225,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user.
ponyorm,pony/orm/tests/__init__.py,15,Path Traversal,Low,"Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files."
ponyorm,pony/orm/core.py,1257,Use of Password Hash With Insufficient Computational Effort,Low,hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.
sqlalchemy,doc/build/requirements.txt,5,HTTP Request Smuggling,Medium,Affected versions of this package are vulnerable to HTTP Request Smuggling via the parse and validate strings capabilities in the int constructor.
sqlalchemy,doc/build/requirements.txt,5,HTTP Request Smuggling,Medium,Affected versions of this package are vulnerable to HTTP Request Smuggling via the parse and validate strings capabilities in the int constructor.
sqlalchemy,doc/build/requirements.txt,5,MPL-2.0 License ,Medium,No remediation path available
sqlalchemy,doc/build/requirements.txt,5,Open Redirect,Low,"Affected versions of this package are vulnerable to Open Redirect via the StaticFileHandler class, due to improper validation of the default_filename parameter in the initialize function. Exploiting this vulnerability is possible under specific configurations and might result in a redirect to an attacker-controlled site."
sqlalchemy,examples/performance/__init__.py,332,Code Injection,Medium,"Unsanitized input from a command line argument flows into __import__, where it is executed as Python code. This may result in a Code Injection vulnerability."
sqlalchemy,examples/performance/__init__.py,391,Code Injection,Medium,"Unsanitized input from a command line argument flows into __import__, where it is executed as Python code. This may result in a Code Injection vulnerability."
sqlalchemy,lib/sqlalchemy/dialects/mssql/base.py,3168,SQL Injection,Medium,"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability"
sqlalchemy,test/ext/test_extendedattr.py,222,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/ext/test_extendedattr.py,255,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/ext/test_extendedattr.py,268,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_attributes.py,247,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_attributes.py,260,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_attributes.py,550,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_attributes.py,574,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,114,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,140,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,167,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,188,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,204,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,243,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,262,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,276,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,277,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,277,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,282,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,287,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,368,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,443,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,501,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,529,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,581,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,582,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,622,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,651,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,671,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,678,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,686,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,705,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,1095,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,1124,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,1138,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,1139,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,1139,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,1157,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,1242,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,1247,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,1283,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,1328,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,1336,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,1368,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/orm/test_naturalpks.py,1469,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/ext/asyncio/test_scoping_py3k.py,32,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
sqlalchemy,test/perf/many_table_reflection.py,141,SQL Injection,Low,"Unsanitized input from a command line argument flows into sqlalchemy.schema.DDL, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
sqlalchemy,test/perf/many_table_reflection.py,143,SQL Injection,Low,"Unsanitized input from a command line argument flows into sqlalchemy.schema.DDL, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
sqlalchemy,test/perf/many_table_reflection.py,162,SQL Injection,Low,"Unsanitized input from a command line argument flows into sqlalchemy.schema.DDL, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
sqlalchemy,test/perf/many_table_reflection.py,162,SQL Injection,Low,"Unsanitized input from a command line argument flows into sqlalchemy.schema.DDL, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
sqlalchemy,test/perf/many_table_reflection.py,552,SQL Injection,Low,"Unsanitized input from a command line argument flows into sqlalchemy.schema.DDL, where it is used in an SQL query. This may result in an SQL Injection vulnerability."
sqlalchemy,lib/sqlalchemy/util/compat.py,103,Use of Password Hash With Insufficient Computational Effort,Low,hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.
sqlalchemy,lib/sqlalchemy/util/compat.py,108,Use of Password Hash With Insufficient Computational Effort,Low,hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.
sqlalchemy,examples/dogpile_caching/environment.py,50,Use of Password Hash With Insufficient Computational Effort,Low,hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.
sqlalchemy,test/orm/test_dynamic.py,1344,Use of Hardcoded Credentials,Low,Do not hardcode credentials in code. Found hardcoded credential used in user_name.
